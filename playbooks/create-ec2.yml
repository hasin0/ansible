- name: Create an EC2 instance
  hosts: localhost
  gather_facts: False
  tasks:
  - name: Launch an EC2 instance
    ec2:
      key_name: /home/hassan/Downloads/devopsproject.pem # Replace with your AWS key pair name (provide the correct file path)
      group: ansibleSG # Replace with your security group name
      instance_type: t2.micro # Choose your desired instance type
      image: ami-0e83be366243f524a # Replace with the desired AMI ID
      region: us-east-2 # Replace with your desired AWS region
      count: 1
      instance_tags:
        Name: ansible-created
    register: ec2

  - name: Print the instance details
    debug:
      var: ec2.instances[0].public_ip
















  # - name: Create an EC2 instance
  #   hosts: localhost
  #   gather_facts: False
  #   tasks:
  #   - ec2:
  #       key_name: /home/hassan/Downloads/devopsproject.pem # Replace with your AWS key pair name
  #       group: ansibleSG # Replace with your security group name
  #       instance_type: t2.micro # Choose your desired instance type
  #       image: ami-0e83be366243f524a # Replace with the desired AMI ID
  #       region: us-east-2 # Replace with your desired AWS region
  #       count: 1
  #       instance_tags:
  #         Name: ansibe created
  #     register: ec2


  #   - name: Print the instance details
  #     debug:
  #       var: ec2.instances[0].public_ip

  # - name: ansibe created
  #   local_action: add_host hostname={{ item.public_ip }} groupname=ec2hosts
  #   with_items: "{{ ec2.instances }}"

  # - name: Wait for SSH to become available
  #   wait_for:
  #     host: "{{ item.public_ip }}"
  #     port: 22
  #     delay: 60
  #     timeout: 300
  #     state: started
  #   with_items: "{{ ec2.instances }}"

  # - name: Example Playbook
  #   hosts: ec2hosts
  #   become: yes # Use sudo to become a superuser
  #   tasks:
  #   - name: Your Task
  #     # Your task definition here
